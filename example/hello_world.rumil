Main {

    // a list of Person instances
    people<[Person]>;

    // A comment... hello!
    // The Main method
    + (args<[s]>) {
        $("Hello, world!");

        #(args) > 0 ? {
            $("Args:");

            // TODO: redesign/deep dive into collections notation
            arg<s> := args[,] {
                $(arg);
            }
        } ? {
            $("No args supplied");
        }
    }

    // This is a transitive method
    give_name (name<s>) |> person<Person> {
        person.name = name;
    }

    // Recursive Fibonacci sequence
    fib<i> (n: i) {
        n <= 0 ? {
            >: 0;
        } n <= 2 ? {
            >: 1;
        }

        >: fib(n-1) + fib(n-2);
    }

    // This method simulates drawing cards from a deck.
    // It takes a score limit to draw to along with a shuffled
    // card deck integer array, and repeatedly picks up the
    // next card until either the deck is empty, or the limit has been reached.
    // It returns the score that was drawn, and whether the limit was hit right on.
    draw_cards<i, b> (limit<i>) |> cards<[i]> {
        score<i>;

        // Contingent ("do until") loop
        {
            card<i> := cards[<-];  // pop from cards
            score += card;
        }..? score >= limit || #(cards) == 0;

        >: score, score == limit;
    }

    // A method that instantiates and returns a new entity instance
    @create_person<Person> (name<s>, age<i>) {
        // instantiate (local instances are always mutable)
        person<Person> := +(name, age);

        person.age >= 100 ? {
            .give_name ('{person.name} the Old') |> person;
        }

        // update our list and return
        person -> .people;
        >: person;
    }
}

_Person {

    // Declaring some fields
    name<s>;
    age<i>;
    score<f>;
    _ready<b>;

    +(name<s>, age<i>) {
        // The dot operator without a subject means "this".
        .name = name;
        .age = age;
    }

    // A reflexive method that increases the person's score.
    @add_score(score<f>) {
        .score += score;
    }
}